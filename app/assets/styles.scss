@import "variables";

article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

html {
  box-sizing: border-box;
  font-family: 'Open Sans', sans-serif;
}

*, *:before, *:after {
  box-sizing: inherit;
}

body {
  margin: 0;
  padding: 20px;
}

@mixin button-colour($base, $fg: white) {
  background-color: $base;
  border-color: darken($base, 15%);
  color: $fg;
  box-shadow: 0 0 1px transparentize($base, 0.4);
  border-radius: 1px;

  &:hover {
    background-color: darken($base, 15%);
    color: $fg;
  }

  &:focus {
    outline: 1px solid darken($base, 15%);
  }

  &:focus:active {
    outline: none;
  }

  &[disabled] {
    border-color: white;
    color: grey;
    background-color: white;
  }
}

$w: 5px;
button {
  position: relative;
  border: 0;
  border-bottom-width: $w;
  border-bottom-style: solid;
  padding: 15px 25px 15px - $w;
  line-height: 16px;
  height: 46px;
  font-size: 16px;
  font-weight: 300;
  letter-spacing: 0.5px;
  transition: all 0.3s ease;
  font-family: 'Open Sans';
  text-shadow: 0 0 1px rgba(0,0,0,0.2);
  margin: 10px 0;

  &:hover {
    cursor: pointer;
  }

  &:active {
    transform: translateY(4px);
    border-bottom-width: 1px;
  }

  &[disabled] {
    cursor: auto;
  }

  @include button-colour(#78909C);

  &.-red { @include button-colour(#ff5252); }
  &.-light-blue { @include button-colour(#b3e5fc, black); }
  &.-green { @include button-colour(#43A047); }
}

textarea,
input {
  font-family: inherit;
  border-radius: 5px;
  padding: 5px 10px;
  font-size: 1em;
  border: 1px solid #dfdfdf;
}

input {
  height: 40px;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}

.react-tagsinput {
  margin: 10px 0;
  padding: 5px 8px;
  width: 400px;
  display: inline-block;

  input {
    margin-top: 5px;
    display: block;
    width: 100%;
  }
}

$tag-height: 35px;
$tag-sub-height: $tag-height * 0.75;
.react-tagsinput-tag {
  background-color: $tag-bg;
  display: inline-block;
  padding-left: 20px;
  margin: 3px;
  line-height: $tag-height;
  border-radius: $tag-height / 2;
}

// We need to ensure the tap target of the remove button remains large
a.react-tagsinput-remove {
  height: 100%;
  width: $tag-height;
  padding-left: 6px;
  box-sizing: content-box;
  display: inline-block;

  &:after {
    content: 'Ã—';
    text-align: center;
    background-color: darken($tag-bg, 5%);
    margin: ($tag-height - $tag-sub-height) / 2;
    height: $tag-sub-height;
    width: $tag-sub-height;
    line-height: $tag-sub-height;
    display: inline-block;
    border-radius: 50%;
    transition: all 0.25s ease;
  }

  &:hover {
    cursor: pointer;
    &:after {
      background-color: darken($tag-bg, 10%);
      transform: scale(1.05);
    }
  }
}
